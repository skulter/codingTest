# 집합은 중복을 허용하지않음
# 순서가 없음
# 리스트 혹은 문자열을 이용해서 초기화. 이때 set() 함수를 사용
# 혹은 중괄호 {} 안에 각 원소를 콤마 (,) 기준으로 구분하여 삽입함으로써 초기화 가능
# 데이터의 조회 및 수정에 있어서 O(1)의 시간에 처리 가능

data = set([1, 2, 3, 4, 6])
print(data)

data = {1, 1, 2, 3, 4, 5, 6}
print(data)


# 집합 자료형의 연산
# 기본적인 집합 연산으로는 합집합, 교집합, 차집합 연산 등이 있다.
a = {1, 2, 3, 4, 5}
b = {3, 4, 5, 6, 7}
print('집합 연산')
# 합집합
print(a | b)
# 교집합
print(a & b)
# 차집합
print(a-b)


# 집합 자료형 관련 함수

# 새로운 원소 추가
b.add(8)
print(b)

# 새로운 원소 여러 개 추가
b.update([9, 10])
print(b)

# 특정한 값을 갖는 원소 삭제
b.remove(9)
print(b)

# 리스트 = [], 튜플 (), 사전 자료형 {}, 집합 자료형 {} or dict ex) data['홍길동'] = 97, 사전자료형 {} or set([])
# 리스트나 튜플은 순서가 있기 때문에 인덱싱을 통해 자료형의 값을 얻을 수 있다.
# 사전자료형과 집합자료형은 순서가 없기 때문에 인덱싱으로 값을 얻을 수 없다.
# 사전의 키, 혹은 집합의 원소를 이용해 O(1)의 시간복잡도로 조회한다.

